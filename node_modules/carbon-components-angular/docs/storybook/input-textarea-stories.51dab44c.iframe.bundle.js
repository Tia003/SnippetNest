"use strict";(self.webpackChunkcarbon_components_angular=self.webpackChunkcarbon_components_angular||[]).push([[2399],{"./src/input/textarea.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Skeleton:()=>Skeleton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/input/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Input/Text area",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[___WEBPACK_IMPORTED_MODULE_1__.gP]})],component:___WEBPACK_IMPORTED_MODULE_1__.y8},Basic=(args=>({props:args,template:'\n        <cds-textarea-label\n        [helperText]="helperText"\n        [invalid]="invalid"\n        [disabled]="disabled"\n        [invalidText]="invalidText"\n        [warn]="warn"\n        [warnText]="warnText">\n        {{label}}\n        <textarea\n            cdsTextArea\n            [placeholder]="placeholder"\n            [invalid]="invalid"\n            [disabled]="disabled"\n            [theme]="theme"\n            [rows]="rows"\n            [cols]="cols"\n            aria-label="textarea"></textarea>\n        </cds-textarea-label>\n    '})).bind({});Basic.args={disabled:!1,invalid:!1,invalidText:"Invalid entry",warn:!1,warnText:"This is a warning!",label:"Text input label",helperText:"Optional helper text",placeholder:"Placeholder",cols:50,rows:4,autocomplete:"on",theme:"dark"},Basic.argTypes={autocomplete:{options:["on","off"],control:"radio"},theme:{options:["light","dark"],control:"radio"}};const Skeleton=(args=>({props:args,template:'\n        <cds-textarea-label skeleton="true">\n            <div cdsTextArea skeleton="true"></div>\n        </cds-textarea-label>\n    '})).bind({});Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'args => ({\n  props: args,\n  template: `\n        <cds-textarea-label\n        [helperText]="helperText"\n        [invalid]="invalid"\n        [disabled]="disabled"\n        [invalidText]="invalidText"\n        [warn]="warn"\n        [warnText]="warnText">\n        {{label}}\n        <textarea\n            cdsTextArea\n            [placeholder]="placeholder"\n            [invalid]="invalid"\n            [disabled]="disabled"\n            [theme]="theme"\n            [rows]="rows"\n            [cols]="cols"\n            aria-label="textarea"></textarea>\n        </cds-textarea-label>\n    `\n})',...Basic.parameters?.docs?.source}}},Skeleton.parameters={...Skeleton.parameters,docs:{...Skeleton.parameters?.docs,source:{originalSource:'args => ({\n  props: args,\n  template: `\n        <cds-textarea-label skeleton="true">\n            <div cdsTextArea skeleton="true"></div>\n        </cds-textarea-label>\n    `\n})',...Skeleton.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","Skeleton"]}}]);